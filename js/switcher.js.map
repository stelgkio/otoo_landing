{"mappings":"ACAC,CAAA,KAEC,IAAM,EAAc,aAAa,OAAA,CAAQ,SAEnC,EAAoB,IACxB,AAAI,GAIG,CAAA,OAAO,UAAA,CAAW,gCAAgC,OAAA,CAAU,OAAS,OAA5E,EAGI,EAAW,SAAU,CAAK,EAC1B,AAAU,SAAV,GAAoB,OAAO,UAAA,CAAW,gCAAgC,OAAA,CACxE,SAAS,eAAA,CAAgB,YAAA,CAAa,gBAAiB,SAEvD,SAAS,eAAA,CAAgB,YAAA,CAAa,gBAAiB,EAE3D,EAEM,EAAmB,SAAU,CAAK,EACtC,IAAM,EAAS,SAAS,cAAA,CAAe,UAElC,IAED,AAAU,UAAV,GAAqB,AAAU,SAAV,GACvB,+CAA+C;AAC/C,EAAO,SAAA,CAAU,MAAA,CAAO,cAAe,kBACvC,EAAO,SAAA,CAAU,GAAA,CAAI,eAAgB,oBAErC,+CAA+C;AAC/C,EAAO,SAAA,CAAU,MAAA,CAAO,eAAgB,kBACxC,EAAO,SAAA,CAAU,GAAA,CAAI,cAAe,mBAExC,EAEM,EAAoB,SAAU,CAAK,EACvC,IAAM,EAAS,SAAS,cAAA,CAAe,UAEnC,AAAU,CAAA,UAAV,GAAqB,AAAU,SAAV,GACvB,+CAA+C;AAC/C,EAAO,SAAA,CAAU,MAAA,CAAO,cAAe,kBACvC,EAAO,SAAA,CAAU,GAAA,CAAI,eAAgB,oBAErC,+CAA+C;AAC/C,EAAO,SAAA,CAAU,MAAA,CAAO,eAAgB,kBACxC,EAAO,SAAA,CAAU,GAAA,CAAI,cAAe,kBAExC,EAEA,EAAS,KAET,IAAM,EAAkB,AAAA,IACtB,2EAA2E;AAC3E,IAAM,EAAc,SAAS,aAAA,CAAc,CAAC,sBAAsB,EAAE,EAAM,EAAE,CAAC,EAC7E,mFAAmF;AAEnF,SAAS,gBAAA,CAAiB,yBAAyB,OAAA,CAAQ,AAAA,IACzD,EAAQ,SAAA,CAAU,MAAA,CAAO,SAC3B,GAEA,EAAY,SAAA,CAAU,GAAA,CAAI,UAC1B,uDAAuD;AAEvD,EAAiB,GACjB,EAAkB,EACpB,EAEA,OAAO,UAAA,CAAW,gCAAgC,gBAAA,CAAiB,SAAU,KACvE,CAAA,AAAgB,UAAhB,GAA2B,AAAgB,SAAhB,CAAgB,GAC7C,EAAS,IAEb,GAEA,OAAO,gBAAA,CAAiB,mBAAoB,KAC1C,EAAgB,KAChB,SAAS,gBAAA,CAAiB,yBACvB,OAAA,CAAQ,AAAA,IACP,EAAO,gBAAA,CAAiB,QAAS,KAC/B,IAAM,EAAQ,EAAO,YAAA,CAAa,uBAClC,aAAa,OAAA,CAAQ,QAAS,GAC9B,EAAS,GACT,EAAgB,EAClB,EACF,EACJ,EACF,CAAA,G,qC","sources":["<anon>","src/js/switcher.js"],"sourcesContent":["(function () {\n(()=>{\n    \"use strict\";\n    const storedTheme = localStorage.getItem(\"theme\");\n    const getPreferredTheme = ()=>{\n        if (storedTheme) return storedTheme;\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    };\n    const setTheme = function(theme) {\n        if (theme === \"auto\" && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) document.documentElement.setAttribute(\"data-bs-theme\", \"light\");\n        else document.documentElement.setAttribute(\"data-bs-theme\", theme);\n    };\n    const toggleNavbarMode = function(theme) {\n        const navbar = document.getElementById(\"navbar\");\n        if (!navbar) return;\n        if (theme === \"light\" || theme === \"auto\") {\n            // If navbar is currently dark, switch to light\n            navbar.classList.remove(\"navbar-dark\", \"bg-transparent\");\n            navbar.classList.add(\"navbar-light\", \"bg-transparent\");\n        } else {\n            // If navbar is currently light, switch to dark\n            navbar.classList.remove(\"navbar-light\", \"bg-transparent\");\n            navbar.classList.add(\"navbar-dark\", \"bg-transparent\");\n        }\n    };\n    const toggleSidebarMode = function(theme) {\n        const navbar = document.getElementById(\"sidebar\");\n        if (theme === \"light\" || theme === \"auto\") {\n            // If navbar is currently dark, switch to light\n            navbar.classList.remove(\"navbar-dark\", \"bg-transparent\");\n            navbar.classList.add(\"navbar-light\", \"bg-transparent\");\n        } else {\n            // If navbar is currently light, switch to dark\n            navbar.classList.remove(\"navbar-light\", \"bg-transparent\");\n            navbar.classList.add(\"navbar-dark\", \"bg-transparent\");\n        }\n    };\n    setTheme(getPreferredTheme());\n    const showActiveTheme = (theme)=>{\n        // const activeThemeIcon = document.querySelector('.theme-icon-active use')\n        const btnToActive = document.querySelector(`[data-bs-theme-value=\"${theme}\"]`);\n        // const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')\n        document.querySelectorAll(\"[data-bs-theme-value]\").forEach((element)=>{\n            element.classList.remove(\"active\");\n        });\n        btnToActive.classList.add(\"active\");\n        // activeThemeIcon.setAttribute('href', svgOfActiveBtn)\n        toggleNavbarMode(theme);\n        toggleSidebarMode(theme);\n    };\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", ()=>{\n        if (storedTheme !== \"light\" || storedTheme !== \"dark\") setTheme(getPreferredTheme());\n    });\n    window.addEventListener(\"DOMContentLoaded\", ()=>{\n        showActiveTheme(getPreferredTheme());\n        document.querySelectorAll(\"[data-bs-theme-value]\").forEach((toggle)=>{\n            toggle.addEventListener(\"click\", ()=>{\n                const theme = toggle.getAttribute(\"data-bs-theme-value\");\n                localStorage.setItem(\"theme\", theme);\n                setTheme(theme);\n                showActiveTheme(theme);\n            });\n        });\n    });\n})();\n\n})();\n//# sourceMappingURL=switcher.js.map\n","(() => {\n  'use strict'\n  const storedTheme = localStorage.getItem('theme')\n\n  const getPreferredTheme = () => {\n    if (storedTheme) {\n      return storedTheme\n    }\n\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n  }\n\n  const setTheme = function (theme) {\n    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      document.documentElement.setAttribute('data-bs-theme', 'light')\n    } else {\n      document.documentElement.setAttribute('data-bs-theme', theme)\n    }\n  }\n\n  const toggleNavbarMode = function (theme) {\n    const navbar = document.getElementById('navbar');\n\n    if (!navbar) return \n\n    if (theme === 'light' || theme === 'auto') {\n      // If navbar is currently dark, switch to light\n      navbar.classList.remove(\"navbar-dark\", \"bg-transparent\");\n      navbar.classList.add(\"navbar-light\", \"bg-transparent\");\n    } else {\n      // If navbar is currently light, switch to dark\n      navbar.classList.remove(\"navbar-light\", \"bg-transparent\");\n      navbar.classList.add(\"navbar-dark\", \"bg-transparent\");\n    }\n  } \n\n  const toggleSidebarMode = function (theme) {\n    const navbar = document.getElementById('sidebar');\n\n    if (theme === 'light' || theme === 'auto') {\n      // If navbar is currently dark, switch to light\n      navbar.classList.remove(\"navbar-dark\", \"bg-transparent\");\n      navbar.classList.add(\"navbar-light\", \"bg-transparent\");\n    } else {\n      // If navbar is currently light, switch to dark\n      navbar.classList.remove(\"navbar-light\", \"bg-transparent\");\n      navbar.classList.add(\"navbar-dark\", \"bg-transparent\");\n    }\n  }\n\n  setTheme(getPreferredTheme())\n\n  const showActiveTheme = theme => {\n    // const activeThemeIcon = document.querySelector('.theme-icon-active use')\n    const btnToActive = document.querySelector(`[data-bs-theme-value=\"${theme}\"]`)\n    // const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')\n\n    document.querySelectorAll('[data-bs-theme-value]').forEach(element => {\n      element.classList.remove('active')\n    })\n\n    btnToActive.classList.add('active')\n    // activeThemeIcon.setAttribute('href', svgOfActiveBtn)\n\n    toggleNavbarMode(theme)\n    toggleSidebarMode(theme)\n  }\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n    if (storedTheme !== 'light' || storedTheme !== 'dark') {\n      setTheme(getPreferredTheme())\n    }\n  })\n\n  window.addEventListener('DOMContentLoaded', () => {\n    showActiveTheme(getPreferredTheme())\n    document.querySelectorAll('[data-bs-theme-value]')\n      .forEach(toggle => {\n        toggle.addEventListener('click', () => {\n          const theme = toggle.getAttribute('data-bs-theme-value')\n          localStorage.setItem('theme', theme)\n          setTheme(theme)\n          showActiveTheme(theme)\n        })\n      })\n  })\n})()"],"names":["storedTheme","localStorage","getItem","getPreferredTheme","window","matchMedia","matches","setTheme","theme","document","documentElement","setAttribute","toggleNavbarMode","navbar","getElementById","classList","remove","add","toggleSidebarMode","showActiveTheme","btnToActive","querySelector","querySelectorAll","forEach","element","addEventListener","toggle","getAttribute","setItem"],"version":3,"file":"switcher.js.map"}